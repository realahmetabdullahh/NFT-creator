<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>NFT Gallery</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f0f0f0;
      perspective: 1000px;
    }

    h1 {
      text-align: center;
      margin-top: 50px;
      font-size: 2.5em;
      color: #333;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
      animation: rotateAnimation 8s linear infinite;
    }

    @keyframes rotateAnimation {
      0% { transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
      100% { transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg); }
    }

    form {
      margin-bottom: 20px;
      transform-style: preserve-3d;
    }

    input[type="text"], button {
      width: calc(100% - 20px);
      padding: 15px;
      margin: 10px;
      border: none;
      background-color: rgba(255, 255, 255, 0.8);
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease-in-out;
    }

    input[type="text"]:focus, button:focus {
      outline: none;
      transform: translateY(-5px);
    }

    button {
      background-color: #007bff;
      color: #fff;
      cursor: pointer;
      font-size: 1.1em;
      border-radius: 5px;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #0056b3;
    }

    #gallery {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      transform-style: preserve-3d;
    }

    #gallery img {
      width: 200px;
      margin: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease-in-out;
    }

    #gallery img:hover {
      transform: translateY(-10px) rotateY(15deg) rotateX(10deg);
    }
  </style>
</head>
<body>
  <h1>NFT Gallery</h1>
  
  <form id="mintForm">
    <label for="name">Name:</label>
    <input type="text" id="name" name="name"><br><br>
    <label for="description">Description:</label>
    <input type="text" id="description" name="description"><br><br>
    <label for="imageUri">Image URI:</label>
    <input type="text" id="imageUri" name="imageUri"><br><br>
    <button type="submit">Mint NFT</button>
  </form>

  <div id="gallery"></div>

  <script>
    document.addEventListener('DOMContentLoaded', async () => {
      if (window.ethereum) {
        window.web3 = new Web3(window.ethereum);
        await window.ethereum.enable();
      } else {
        console.error('No Ethereum provider detected');
      }

      const abi = [ /* Your contract ABI here */ ];
      const contractAddress = 'YOUR_CONTRACT_ADDRESS';
      const contract = new web3.eth.Contract(abi, contractAddress);

      const mintForm = document.getElementById('mintForm');
      mintForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        const formData = new FormData(mintForm);
        const name = formData.get('name');
        const description = formData.get('description');
        const imageUri = formData.get('imageUri');
        const accounts = await web3.eth.getAccounts();
        await contract.methods.mint(accounts[0], name, description, imageUri).send({ from: accounts[0] });
        console.log('NFT minted successfully');
        mintForm.reset();
        refreshGallery();
      });

      function refreshGallery() {
        const gallery = document.getElementById('gallery');
        gallery.innerHTML = '';
        contract.methods.totalSupply().call()
          .then(totalSupply => {
            for (let i = 1; i <= totalSupply; i++) {
              contract.methods.tokenURI(i).call()
                .then(tokenUri => {
                  const image = document.createElement('img');
                  image.src = tokenUri;
                  gallery.appendChild(image);
                });
            }
          });
      }

      refreshGallery();
    });
  </script>
</body>
</html>
